/**
\page plugin_log Accessing the FEBio Log file
By default FEBio writes all output to a log file. More precisely, it uses the Logfile class which writes to both the standard output as well as to a file. FEBio also
defines a felog variable, an instance of Logfile, that developers can use to write to the log file. Although plugins also define an felog variable (by including FECore\log.h)
it is important to realize that this is not the same log file that is being used by FEBio. Instead, it is a variable that is only local to the plugin. 
Although a plugin could use this variable to output information, that information will not be stored to the FEBio log file.

In order to access the FEBio log file, you must call the FECoreKernel::SetInstance during the PluginInitialize function. 

\code
FECORE_EXPORT void PluginInitialize(FECoreKernel& febio)
{
	FECoreKernel::SetInstance(&febio);
}
\endcode

This ensures that the plugin and FEBio use the same kernel and consequently the same resources (e.g. the logfile). 

Writing to the logfile can be done by including the file <FECore\log.h> and using the felog variable. This variable has two member function for writing data to the log file.

The <c>printf</c> function works just like the c printf function and can be used to write formatted text to the screen and the log file. 

\code
felog.printf("A negative Jacobian was detected at integration point %d of element %d", 1, 123);
\endcode

The <c>printbox</c> function is similar, but prints the message in a box. It takes at least two arguments: The first argument is a string that is the title of the 
message box, the second is a formatted text string. 

\code
felog.printbox("FATAL ERROR", "Your library book %s is overdue (fine = $%d)", "FEBio for beginners", 5.0);
\endcode
*/
